/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <36 37 38 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };
    };

    combos {
        compatible = "zmk,combos";

        left_scobe {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 5>;
        };

        left_kv_scobe {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <16 17>;
        };

        left_fig_scobe {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <28 29>;
        };

        right_scobe {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <6 7>;
        };

        right_kv_scobe {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 19>;
        };

        right_fig_scobe {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <30 31>;
        };

        equals {
            bindings = <&kp EQUAL>;
            key-positions = <5 6>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <17 18>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <30 29>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&lt 3 PLUS     &kp Q  &kp W         &kp E            &kp R              &kp T              &kp Y            &kp U               &kp I             &kp O         &kp P          &kp MINUS
&kp GRAVE      &kp A  &HML LCTRL S  &HML LEFT_ALT D  &HML LEFT_SHIFT F  &HML LEFT_WIN G    &HMR LEFT_WIN H  &HMR RIGHT_SHIFT J  &HMR RIGHT_ALT K  &HMR RCTRL L  &kp SEMICOLON  &kp SQT
&kp BACKSLASH  &kp Z  &kp X         &kp C            &kp V              &kp B              &kp N            &kp M               &kp COMMA         &kp DOT       &kp COLON      &kp FSLH
                                    &kp DELETE       &lt 1 ESCAPE       &lt 2 ENTER        &kp SPACE        &lt 2 TAB           &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp LESS_THAN  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4            &kp N5               &kp NUMBER_6  &kp N7          &kp N8        &kp N9     &kp N0      &kp GREATER_THAN
&trans         &trans        &trans        &trans        &kp LC(LG(LEFT_ARROW))  &kp LC(LG(RIGHT))    &kp LEFT      &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp KP_DOT  &kp KP_COMMA
&trans         &trans        &trans        &kp LC(S)     &kp LC(V)               &kp LC(C)            &kp HOME      &kp PAGE_DOWN   &kp PAGE_UP   &kp END    &trans      &trans
                                           &trans        &trans                  &trans               &trans        &trans          &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH       &kp DOLLAR        &kp PERCENT        &kp CARET        &kp AMPERSAND      &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
&trans     &trans           &kp EQUAL    &kp LESS_THAN  &kp LEFT_BRACKET  &kp LEFT_BRACE     &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GREATER_THAN  &kp QUESTION          &trans                 &kp PIPE
&trans     &trans           &trans       &trans         &trans            &kp PRINTSCREEN    &none            &none              &none             &none                 &none                  &none
                                         &trans         &trans            &trans             &trans           &trans             &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5            &kp F6        &kp F7        &kp F8          &kp F9        &kp F10       &trans
&trans  &trans  &trans  &trans  &trans  &kp F11           &kp F12       &trans        &trans          &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &bt BT_CLR_ALL    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
                        &trans  &trans  &trans            &kp LCTRL     &kp LEFT_ALT  &kp LEFT_SHIFT
            >;
        };
    };
};
